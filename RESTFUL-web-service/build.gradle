buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'RESTFUL-web-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "https://m2.neo4j.org" }
    maven { url "https://repo.spring.io/libs-release" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	// spring boot
    compile("org.springframework.boot:spring-boot-starter-web")
    // actuator 
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // 代码生成器
    compile("org.projectlombok:lombok:1.16.8")
    // 端设备类型
    compile("org.springframework.mobile:spring-mobile-device")
    // 数据库
    compile("org.springframework:spring-jdbc")
    compile("com.h2database:h2")
    // 模板
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // ldap
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security:spring-security-ldap")
    compile("org.springframework:spring-tx")
    compile("org.apache.directory.server:apacheds-server-jndi:1.5.5")
    // redis
    compile("org.springframework.boot:spring-boot-starter-redis")
    // RabbitMQ
    compile("org.springframework.boot:spring-boot-starter-amqp")
    // Neo4j
    compile("org.springframework.data:spring-data-neo4j")
    compile("org.hibernate:hibernate-validator")
    compile("org.neo4j:neo4j-cypher-dsl:2.0.1")
    // JMS
    compile("org.springframework:spring-jms")
    compile("org.apache.activemq:activemq-broker")
    // hateoas
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    // gemfire
    compile("org.springframework.boot:spring-boot-starter-data-gemfire")
    runtime("org.springframework.shell:spring-shell:1.0.0.RELEASE")
    // integration
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile("org.springframework.integration:spring-integration-feed")
    // json-path
    testCompile("com.jayway.jsonpath:json-path")
    // 自动化测试
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
        	srcDir 'resources'
        }
    }
}